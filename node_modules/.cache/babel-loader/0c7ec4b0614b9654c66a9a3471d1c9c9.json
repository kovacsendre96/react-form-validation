{"ast":null,"code":"var _jsxFileName = \"/home/kovacsendre/Asztal/Practice/react-form-validation/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInvalidValid = enteredNameTouched && !enteredNameIsValid;\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid();\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmitionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalidValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: enteredName,\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), nameInputIsInvalidValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"Bi7Che7mVMXsk72OJeAbQsWE9xA=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/kovacsendre/Asztal/Practice/react-form-validation/src/components/SimpleInput.js"],"names":["useEffect","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","formIsValid","setFormIsValid","enteredNameIsValid","trim","nameInputIsInvalidValid","nameInputChangeHandler","e","target","value","nameInputBlurHandler","formSubmitionHandler","preventDefault","nameInputClasses"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACO,WAAD,EAAaC,cAAb,IAA+BR,QAAQ,CAAC,KAAD,CAA7C;AAGA,QAAMS,kBAAkB,GAAGN,WAAW,CAACO,IAAZ,OAAqB,EAAhD;AACA,QAAMC,uBAAuB,GAAGN,kBAAkB,IAAI,CAACI,kBAAvD;AAGAV,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGU,kBAAH,EAAsB;AACpBD,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAFD,MAGI;AACFA,MAAAA,cAAc;AACf;AACF,GAPQ,EAOP,CAACC,kBAAD,CAPO,CAAT;;AASA,QAAMG,sBAAsB,GAAIC,CAAD,IAAO;AACpCT,IAAAA,cAAc,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAG,MAAI;AAE/BV,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AAGD,GALD;;AAOA,QAAMW,oBAAoB,GAAIJ,CAAD,IAAO;AAClCA,IAAAA,CAAC,CAACK,cAAF;AACAZ,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAI,CAACG,kBAAL,EAAyB;AACvB;AACD;;AAGDL,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GAXD;;AAcA,QAAMa,gBAAgB,GAAGR,uBAAuB,GAC5C,sBAD4C,GAE5C,cAFJ;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEM,oBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEE,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AACE,QAAA,KAAK,EAAEhB,WADT;AAEE,QAAA,QAAQ,EAAES,sBAFZ;AAGE,QAAA,MAAM,EAAEI,oBAHV;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,EAAE,EAAC;AALL;AAAA;AAAA;AAAA;AAAA,cAHF,EAUGL,uBAAuB,iBACtB;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CArED;;GAAMV,W;;KAAAA,W;AAuEN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid,setFormIsValid] = useState(false);\n\n\n  const enteredNameIsValid = enteredName.trim()!==\"\";\n  const nameInputIsInvalidValid = enteredNameTouched && !enteredNameIsValid;\n\n\n  useEffect(()=>{\n    if(enteredNameIsValid){\n      setFormIsValid(true);\n    }\n    else{\n      setFormIsValid()\n    }\n  },[enteredNameIsValid]);\n\n  const nameInputChangeHandler = (e) => {\n    setEnteredName(e.target.value);\n  };\n\n  const nameInputBlurHandler = ()=>{\n\n    setEnteredNameTouched(true);\n\n\n  };\n\n  const formSubmitionHandler = (e) => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n\n    setEnteredName(\"\");\n    setEnteredNameTouched(false)\n  };\n\n\n  const nameInputClasses = nameInputIsInvalidValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n\n        <input\n          value={enteredName}\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          type=\"text\"\n          id=\"name\"\n        />\n        {nameInputIsInvalidValid && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}