{"ast":null,"code":"var _jsxFileName = \"/home/kovacsendre/Asztal/Practice/react-form-validation/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  let nameErrorMessage;\n  const {\n    value: nameValue,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    valueChangeHandler: nameValueChangeHandler,\n    inputBlurHandler: NameBlurHandler,\n    reset: NameInputReset\n  } = useInput(value => {\n    if (value.trim() !== \"\") {} else {\n      nameErrorMessage = \"The name field is required\";\n    }\n\n    if (value.trim().length > 3) {}\n  });\n  useEffect(() => {\n    if (nameIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [nameIsValid]);\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n\n    if (!nameIsValid) {\n      return;\n    }\n\n    NameInputReset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: nameValue,\n          onChange: nameValueChangeHandler,\n          onBlur: NameBlurHandler,\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: nameErrorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"0eehG6zfU/rWbNLo+wJtwBDySIU=\", false, function () {\n  return [useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/home/kovacsendre/Asztal/Practice/react-form-validation/src/components/BasicForm.js"],"names":["useEffect","useState","useInput","BasicForm","props","formIsValid","setFormIsValid","nameErrorMessage","value","nameValue","isValid","nameIsValid","hasError","nameHasError","valueChangeHandler","nameValueChangeHandler","inputBlurHandler","NameBlurHandler","reset","NameInputReset","trim","length","formSubmitHandler","e","preventDefault"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\n\n\nconst BasicForm = (props) => {\n\n  const [formIsValid,setFormIsValid] = useState(false);\n\n\nlet nameErrorMessage;\n  const {\n    value: nameValue,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    valueChangeHandler: nameValueChangeHandler,\n    inputBlurHandler: NameBlurHandler,\n    reset:NameInputReset\n  }=useInput(\n    (value)=>{\n      if(value.trim()!==\"\"){\n\n      }\n      else{\n        nameErrorMessage=\"The name field is required\"\n      }\n      if(value.trim().length>3){\n      }\n    }\n  );\n\n\n    useEffect(()=>{\n      if(nameIsValid){\n        setFormIsValid(true);\n  \n      }\n      else{\n        setFormIsValid(false)\n      }\n\n    },[nameIsValid])\n\n\n\n  const formSubmitHandler=(e)=>{\n    e.preventDefault();\n\n    if(!nameIsValid){\n      return\n    }\n\n    NameInputReset();\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n\n      <div className='control-group'>\n        <div className='form-control'>\n          <label htmlFor='name'>First Name</label>\n          <input value={nameValue} onChange={nameValueChangeHandler} onBlur={NameBlurHandler} type='text' id='name' />\n         {nameHasError&&  <p className=\"error-text\" >{nameErrorMessage}</p>}\n        </div>\n        <div className='form-control'>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name' />\n        </div>\n      </div>\n\n\n      <div className='form-control'>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name' />\n      </div>\n      <div className='form-actions'>\n\n\n        <button disabled={!formIsValid} >Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}