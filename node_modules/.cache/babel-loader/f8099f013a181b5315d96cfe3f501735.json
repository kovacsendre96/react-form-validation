{"ast":null,"code":"var _jsxFileName = \"/home/kovacsendre/Asztal/Practice/react-form-validation/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const {\n    value: nameValue,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    valueChangeHandler: nameValueChangeHandler,\n    inputBlurHandler: NameBlurHandler,\n    reset: NameInputReset\n  } = useInput(value => value.trim() !== \"\" && value.length > 3);\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameValueChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: lastNameInputReset\n  } = useInput(value => value.trim() !== \"\" && value.length > 3);\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailValueChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: emailInputReset\n  } = useInput(value => value.trim() !== \"\" && value.length > 3);\n  useEffect(() => {\n    if (nameIsValid && lastNameIsValid && emailIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [nameIsValid, lastNameIsValid, emailIsValid]);\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n\n    if (!nameIsValid || !lastNameIsValid) {\n      return;\n    }\n\n    NameInputReset();\n    lastNameInputReset();\n    emailInputReset();\n  };\n\n  const nameInputClasses = nameHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameInputClasses = lastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: nameValue,\n          onChange: nameValueChangeHandler,\n          onBlur: NameBlurHandler,\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: lastNameValue,\n          onChange: lastNameValueChangeHandler,\n          onBlur: lastNameBlurHandler,\n          type: \"text\",\n          id: \"lastName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last name field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: emailValue,\n        onChange: emailValueChangeHandler,\n        onBlur: emailBlurHandler,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"/OaDa/G/F1VxGTVn6KamlC42/dM=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/home/kovacsendre/Asztal/Practice/react-form-validation/src/components/BasicForm.js"],"names":["useEffect","useState","useInput","BasicForm","props","formIsValid","setFormIsValid","value","nameValue","isValid","nameIsValid","hasError","nameHasError","valueChangeHandler","nameValueChangeHandler","inputBlurHandler","NameBlurHandler","reset","NameInputReset","trim","length","lastNameValue","lastNameIsValid","lastNameHasError","lastNameValueChangeHandler","lastNameBlurHandler","lastNameInputReset","emailValue","emailIsValid","emailHasError","emailValueChangeHandler","emailBlurHandler","emailInputReset","formSubmitHandler","e","preventDefault","nameInputClasses","lastNameInputClasses","emailInputClasses"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,oBAArB;;;AAIA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BL,QAAQ,CAAC,KAAD,CAA7C;AAKA,QAAM;AACJM,IAAAA,KAAK,EAAEC,SADH;AAEJC,IAAAA,OAAO,EAAEC,WAFL;AAGJC,IAAAA,QAAQ,EAAEC,YAHN;AAIJC,IAAAA,kBAAkB,EAAEC,sBAJhB;AAKJC,IAAAA,gBAAgB,EAAEC,eALd;AAMJC,IAAAA,KAAK,EAACC;AANF,MAOJhB,QAAQ,CACPK,KAAD,IAASA,KAAK,CAACY,IAAN,OAAe,EAAf,IAAmBZ,KAAK,CAACa,MAAN,GAAa,CADjC,CAPV;AAaE,QAAM;AACJb,IAAAA,KAAK,EAAEc,aADH;AAEJZ,IAAAA,OAAO,EAAEa,eAFL;AAGJX,IAAAA,QAAQ,EAAEY,gBAHN;AAIJV,IAAAA,kBAAkB,EAAEW,0BAJhB;AAKJT,IAAAA,gBAAgB,EAAEU,mBALd;AAMJR,IAAAA,KAAK,EAACS;AANF,MAOJxB,QAAQ,CACPK,KAAD,IAASA,KAAK,CAACY,IAAN,OAAe,EAAf,IAAmBZ,KAAK,CAACa,MAAN,GAAa,CADjC,CAPV;AAaE,QAAM;AACJb,IAAAA,KAAK,EAAEoB,UADH;AAEJlB,IAAAA,OAAO,EAAEmB,YAFL;AAGJjB,IAAAA,QAAQ,EAAEkB,aAHN;AAIJhB,IAAAA,kBAAkB,EAAEiB,uBAJhB;AAKJf,IAAAA,gBAAgB,EAAEgB,gBALd;AAMJd,IAAAA,KAAK,EAACe;AANF,MAOJ9B,QAAQ,CACPK,KAAD,IAASA,KAAK,CAACY,IAAN,OAAe,EAAf,IAAmBZ,KAAK,CAACa,MAAN,GAAa,CADjC,CAPV;AAYFpB,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGU,WAAW,IAAIY,eAAf,IAAkCM,YAArC,EAAkD;AAChDtB,MAAAA,cAAc,CAAC,IAAD,CAAd;AAED,KAHD,MAII;AACFA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AAEF,GATQ,EASP,CAACI,WAAD,EAAaY,eAAb,EAA6BM,YAA7B,CATO,CAAT;;AAaF,QAAMK,iBAAiB,GAAEC,CAAD,IAAK;AAC3BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAG,CAACzB,WAAD,IAAgB,CAACY,eAApB,EAAoC;AAClC;AACD;;AAEDJ,IAAAA,cAAc;AACdQ,IAAAA,kBAAkB;AAClBM,IAAAA,eAAe;AAChB,GAVD;;AAYA,QAAMI,gBAAgB,GAAGxB,YAAY,GACjC,sBADiC,GAEjC,cAFJ;AAKE,QAAMyB,oBAAoB,GAAGd,gBAAgB,GAC3C,sBAD2C,GAE3C,cAFF;AAMA,QAAMe,iBAAiB,GAAGT,aAAa,GACrC,sBADqC,GAErC,cAFF;AAIF,sBACE;AAAM,IAAA,QAAQ,EAAEI,iBAAhB;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAEG,gBAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,KAAK,EAAE5B,SAAf;AAA0B,UAAA,QAAQ,EAAEM,sBAApC;AAA4D,UAAA,MAAM,EAAEE,eAApE;AAAqF,UAAA,IAAI,EAAC,MAA1F;AAAiG,UAAA,EAAE,EAAC;AAApG;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGEJ,YAAY,iBAAI;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAK,QAAA,SAAS,EAAEyB,oBAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,KAAK,EAAEhB,aAAd;AAA6B,UAAA,QAAQ,EAAEG,0BAAvC;AAAmE,UAAA,MAAM,EAAEC,mBAA3E;AAAgG,UAAA,IAAI,EAAC,MAArG;AAA4G,UAAA,EAAE,EAAC;AAA/G;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGF,gBAAgB,iBAAI;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAkBE;AAAK,MAAA,SAAS,EAAEe,iBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,KAAK,EAAEX,UAAd;AAA0B,QAAA,QAAQ,EAAEG,uBAApC;AAA6D,QAAA,MAAM,EAAEC,gBAArE;AAAuF,QAAA,IAAI,EAAC,MAA5F;AAAmG,QAAA,EAAE,EAAC;AAAtG;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGF,aAAa,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHpB;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,eAuBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BAGE;AAAQ,QAAA,QAAQ,EAAE,CAACxB,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CApHD;;GAAMF,S;UAcFD,Q,EAaEA,Q,EAaEA,Q;;;KAxCFC,S;AAsHN,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\n\n\nconst BasicForm = (props) => {\n\n  const [formIsValid,setFormIsValid] = useState(false);\n\n\n\n\n  const {\n    value: nameValue,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    valueChangeHandler: nameValueChangeHandler,\n    inputBlurHandler: NameBlurHandler,\n    reset:NameInputReset\n  }=useInput(\n    (value)=>value.trim()!==\"\"&&value.length>3)\n  \n \n\n    \n    const {\n      value: lastNameValue,\n      isValid: lastNameIsValid,\n      hasError: lastNameHasError,\n      valueChangeHandler: lastNameValueChangeHandler,\n      inputBlurHandler: lastNameBlurHandler,\n      reset:lastNameInputReset\n    }=useInput(\n      (value)=>value.trim()!==\"\"&&value.length>3)\n\n\n\n\n      const {\n        value: emailValue,\n        isValid: emailIsValid,\n        hasError: emailHasError,\n        valueChangeHandler: emailValueChangeHandler,\n        inputBlurHandler: emailBlurHandler,\n        reset:emailInputReset\n      }=useInput(\n        (value)=>value.trim()!==\"\"&&value.length>3)\n\n\n\n    useEffect(()=>{\n      if(nameIsValid && lastNameIsValid && emailIsValid){\n        setFormIsValid(true);\n  \n      }\n      else{\n        setFormIsValid(false)\n      }\n\n    },[nameIsValid,lastNameIsValid,emailIsValid])\n\n\n\n  const formSubmitHandler=(e)=>{\n    e.preventDefault();\n\n    if(!nameIsValid || !lastNameIsValid){\n      return;\n    }\n\n    NameInputReset();\n    lastNameInputReset();\n    emailInputReset();\n  };\n\n  const nameInputClasses = nameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n\n    const lastNameInputClasses = lastNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n\n\n    const emailInputClasses = emailHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n\n      <div className='control-group'>\n\n        <div className={nameInputClasses}>\n          <label htmlFor='name'>First Name</label>\n          <input  value={nameValue} onChange={nameValueChangeHandler} onBlur={NameBlurHandler} type='text' id='name' />\n         {nameHasError&&  <p className=\"error-text\" >Name field is required</p>}\n        </div>\n\n        <div className={lastNameInputClasses}>\n          <label htmlFor='lastName'>Last Name</label>\n          <input value={lastNameValue} onChange={lastNameValueChangeHandler} onBlur={lastNameBlurHandler} type='text' id='lastName' />\n          {lastNameHasError && <p className=\"error-text\">Last name field is required</p>}\n        </div>\n      </div>\n\n\n      <div className={emailInputClasses}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input value={emailValue} onChange={emailValueChangeHandler} onBlur={emailBlurHandler} type='text' id='name' />\n        {emailHasError && <p className=\"error-text\">Email field is required</p>}\n      </div>\n      <div className='form-actions'>\n\n\n        <button disabled={!formIsValid} >Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}