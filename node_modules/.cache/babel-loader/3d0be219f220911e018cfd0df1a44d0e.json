{"ast":null,"code":"var _jsxFileName = \"/home/kovacsendre/Asztal/Practice/react-form-validation/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const {\n    value: nameValue,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    valueChangeHandler: nameValueChangeHandler,\n    inputBlurHandler: NameBlurHandler,\n    reset: NameInputReset\n  } = useInput(value => value.trim() !== \"\" && value.length > 3);\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameValueChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: lastNameInputReset\n  } = useInput(value => value.trim() !== \"\" && value.length > 3);\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailValueChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: emailInputReset\n  } = useInput(value => value.includes(\"@\") && value.includes(\".com\"));\n  useEffect(() => {\n    if (nameIsValid && lastNameIsValid && emailIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [nameIsValid, lastNameIsValid, emailIsValid]);\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n\n    if (!nameIsValid || !lastNameIsValid || !emailIsValid) {\n      return;\n    }\n\n    NameInputReset();\n    lastNameInputReset();\n    emailInputReset();\n  };\n\n  const nameInputClasses = nameHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameInputClasses = lastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: nameValue,\n          onChange: nameValueChangeHandler,\n          onBlur: NameBlurHandler,\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: lastNameValue,\n          onChange: lastNameValueChangeHandler,\n          onBlur: lastNameBlurHandler,\n          type: \"text\",\n          id: \"lastName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last name field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: emailValue,\n        onChange: emailValueChangeHandler,\n        onBlur: emailBlurHandler,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"pA7WR2Qs417p4Pnel2rGGs6WwZk=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/home/kovacsendre/Asztal/Practice/react-form-validation/src/components/BasicForm.js"],"names":["useEffect","useState","useInput","BasicForm","props","formIsValid","setFormIsValid","value","nameValue","isValid","nameIsValid","hasError","nameHasError","valueChangeHandler","nameValueChangeHandler","inputBlurHandler","NameBlurHandler","reset","NameInputReset","trim","length","lastNameValue","lastNameIsValid","lastNameHasError","lastNameValueChangeHandler","lastNameBlurHandler","lastNameInputReset","emailValue","emailIsValid","emailHasError","emailValueChangeHandler","emailBlurHandler","emailInputReset","includes","formSubmitHandler","e","preventDefault","nameInputClasses","lastNameInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const {\n    value: nameValue,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    valueChangeHandler: nameValueChangeHandler,\n    inputBlurHandler: NameBlurHandler,\n    reset: NameInputReset,\n  } = useInput((value) => value.trim() !== \"\" && value.length > 3);\n\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameValueChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: lastNameInputReset,\n  } = useInput((value) => value.trim() !== \"\" && value.length > 3);\n\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailValueChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: emailInputReset,\n  } = useInput((value) => value.includes(\"@\") && value.includes(\".com\"));\n\n  useEffect(() => {\n    if (nameIsValid && lastNameIsValid && emailIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [nameIsValid, lastNameIsValid, emailIsValid]);\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n\n    if (!nameIsValid || !lastNameIsValid || !emailIsValid) {\n      return;\n    }\n\n    NameInputReset();\n    lastNameInputReset();\n    emailInputReset();\n  };\n\n  const nameInputClasses = nameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const lastNameInputClasses = lastNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={nameInputClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            value={nameValue}\n            onChange={nameValueChangeHandler}\n            onBlur={NameBlurHandler}\n            type=\"text\"\n            id=\"name\"\n          />\n          {nameHasError && <p className=\"error-text\">Name field is required</p>}\n        </div>\n\n        <div className={lastNameInputClasses}>\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input\n            value={lastNameValue}\n            onChange={lastNameValueChangeHandler}\n            onBlur={lastNameBlurHandler}\n            type=\"text\"\n            id=\"lastName\"\n          />\n          {lastNameHasError && (\n            <p className=\"error-text\">Last name field is required</p>\n          )}\n        </div>\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          value={emailValue}\n          onChange={emailValueChangeHandler}\n          onBlur={emailBlurHandler}\n          type=\"text\"\n          id=\"name\"\n        />\n        {emailHasError && <p className=\"error-text\">Email field is required</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}